warning: unused import: `BufWriter`
  --> crates/core/src/converter.rs:17:19
   |
17 |     io::{BufRead, BufWriter, Cursor, Read},
   |                   ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `Arena`, `AstNode`, `ComrakOptions`, `ComrakPlugins`, `NodeValue`, `markdown_to_html_with_plugins`, and `plugins::syntect::SyntectAdapter`
  --> crates/core/src/converter.rs:24:5
   |
24 |     Arena, ComrakOptions, ComrakPlugins, markdown_to_html_with_plugins,
   |     ^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
25 |     nodes::{AstNode, NodeValue},
   |             ^^^^^^^  ^^^^^^^^^
26 |     plugins::syntect::SyntectAdapter,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `sps`
   --> crates/core/src/markdown.rs:148:9
    |
148 |     let sps = data.sourcepos;
    |         ^^^ help: if this is intentional, prefix it with an underscore: `_sps`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `current_line`
   --> crates/core/src/markdown.rs:149:9
    |
149 |     let current_line = line.load(Ordering::SeqCst);
    |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_current_line`

warning: unused variable: `multiline_quote`
   --> crates/core/src/markdown.rs:547:40
    |
547 |         NodeValue::MultilineBlockQuote(multiline_quote) => {
    |                                        ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_multiline_quote`

warning: constant `FG_CYAN` is never used
  --> crates/core/src/markdown.rs:31:7
   |
31 | const FG_CYAN: &str = "\x1B[36m";
   |       ^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `FG_BRIGHT_WHITE` is never used
  --> crates/core/src/markdown.rs:40:7
   |
40 | const FG_BRIGHT_WHITE: &str = "\x1B[97m";
   |       ^^^^^^^^^^^^^^^

warning: constant `BG_RED` is never used
  --> crates/core/src/markdown.rs:43:7
   |
43 | const BG_RED: &str = "\x1B[41m";
   |       ^^^^^^

warning: constant `BG_GREEN` is never used
  --> crates/core/src/markdown.rs:44:7
   |
44 | const BG_GREEN: &str = "\x1B[42m";
   |       ^^^^^^^^

warning: constant `BG_YELLOW` is never used
  --> crates/core/src/markdown.rs:45:7
   |
45 | const BG_YELLOW: &str = "\x1B[43m";
   |       ^^^^^^^^^

warning: constant `BG_BLUE` is never used
  --> crates/core/src/markdown.rs:46:7
   |
46 | const BG_BLUE: &str = "\x1B[44m";
   |       ^^^^^^^

warning: constant `BG_MAGENTA` is never used
  --> crates/core/src/markdown.rs:47:7
   |
47 | const BG_MAGENTA: &str = "\x1B[45m";
   |       ^^^^^^^^^^

warning: constant `BG_CYAN` is never used
  --> crates/core/src/markdown.rs:48:7
   |
48 | const BG_CYAN: &str = "\x1B[46m";
   |       ^^^^^^^

warning: constant `BG_WHITE` is never used
  --> crates/core/src/markdown.rs:49:7
   |
49 | const BG_WHITE: &str = "\x1B[47m";
   |       ^^^^^^^^

warning: constant `BG_BRIGHT_BLACK` is never used
  --> crates/core/src/markdown.rs:50:7
   |
50 | const BG_BRIGHT_BLACK: &str = "\x1B[100m";
   |       ^^^^^^^^^^^^^^^

warning: constant `BG_BRIGHT_RED` is never used
  --> crates/core/src/markdown.rs:51:7
   |
51 | const BG_BRIGHT_RED: &str = "\x1B[101m";
   |       ^^^^^^^^^^^^^

warning: constant `BG_BRIGHT_GREEN` is never used
  --> crates/core/src/markdown.rs:52:7
   |
52 | const BG_BRIGHT_GREEN: &str = "\x1B[102m";
   |       ^^^^^^^^^^^^^^^

warning: constant `BG_BRIGHT_YELLOW` is never used
  --> crates/core/src/markdown.rs:53:7
   |
53 | const BG_BRIGHT_YELLOW: &str = "\x1B[103m";
   |       ^^^^^^^^^^^^^^^^

warning: constant `BG_BRIGHT_BLUE` is never used
  --> crates/core/src/markdown.rs:54:7
   |
54 | const BG_BRIGHT_BLUE: &str = "\x1B[104m";
   |       ^^^^^^^^^^^^^^

warning: constant `BG_BRIGHT_MAGENTA` is never used
  --> crates/core/src/markdown.rs:55:7
   |
55 | const BG_BRIGHT_MAGENTA: &str = "\x1B[105m";
   |       ^^^^^^^^^^^^^^^^^

warning: constant `BG_BRIGHT_CYAN` is never used
  --> crates/core/src/markdown.rs:56:7
   |
56 | const BG_BRIGHT_CYAN: &str = "\x1B[106m";
   |       ^^^^^^^^^^^^^^

warning: constant `BG_BRIGHT_WHITE` is never used
  --> crates/core/src/markdown.rs:57:7
   |
57 | const BG_BRIGHT_WHITE: &str = "\x1B[107m";
   |       ^^^^^^^^^^^^^^^

warning: fields `value` and `fg` are never read
   --> crates/core/src/markdown.rs:622:5
    |
621 | pub struct ThemeColor {
    |            ---------- fields in this struct
622 |     value: String,
    |     ^^^^^
...
625 |     fg: String,
    |     ^^
    |
    = note: `ThemeColor` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: method `to_html_style` is never used
   --> crates/core/src/markdown.rs:742:12
    |
664 | impl CustomTheme {
    | ---------------- method in this implementation
...
742 |     pub fn to_html_style(&self) -> String {
    |            ^^^^^^^^^^^^^

Node { data: RefCell { value: Ast { value: Document, sourcepos: Sourcepos { start: LineColumn { line: 1, column: 1 }, end: LineColumn { line: 220, column: 2 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 1, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 1, column: 1 }, end: LineColumn { line: 1, column: 45 } }, internal_offset: 2, content: "Comprehensive Comrak/GFM Markdown Reference", open: false, last_line_blank: true, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("Comprehensive Comrak/GFM Markdown Reference"), sourcepos: Sourcepos { start: LineColumn { line: 1, column: 3 }, end: LineColumn { line: 1, column: 45 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 3, column: 1 }, end: LineColumn { line: 3, column: 19 } }, internal_offset: 3, content: "Basic Formatting", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Basic Formatting"), sourcepos: Sourcepos { start: LineColumn { line: 3, column: 4 }, end: LineColumn { line: 3, column: 19 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 5, column: 1 }, end: LineColumn { line: 5, column: 36 } }, internal_offset: 0, content: "**Bold text** and __also bold text__\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Strong, sourcepos: Sourcepos { start: LineColumn { line: 5, column: 1 }, end: LineColumn { line: 5, column: 13 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("Bold text"), sourcepos: Sourcepos { start: LineColumn { line: 5, column: 3 }, end: LineColumn { line: 5, column: 11 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Text(" and "), sourcepos: Sourcepos { start: LineColumn { line: 5, column: 14 }, end: LineColumn { line: 5, column: 18 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Strong, sourcepos: Sourcepos { start: LineColumn { line: 5, column: 19 }, end: LineColumn { line: 5, column: 36 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("also bold text"), sourcepos: Sourcepos { start: LineColumn { line: 5, column: 21 }, end: LineColumn { line: 5, column: 34 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 7, column: 1 }, end: LineColumn { line: 7, column: 36 } }, internal_offset: 0, content: "*Italic text* and _also italic text_\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Emph, sourcepos: Sourcepos { start: LineColumn { line: 7, column: 1 }, end: LineColumn { line: 7, column: 13 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("Italic text"), sourcepos: Sourcepos { start: LineColumn { line: 7, column: 2 }, end: LineColumn { line: 7, column: 12 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Text(" and "), sourcepos: Sourcepos { start: LineColumn { line: 7, column: 14 }, end: LineColumn { line: 7, column: 18 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Emph, sourcepos: Sourcepos { start: LineColumn { line: 7, column: 19 }, end: LineColumn { line: 7, column: 36 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("also italic text"), sourcepos: Sourcepos { start: LineColumn { line: 7, column: 20 }, end: LineColumn { line: 7, column: 35 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 9, column: 1 }, end: LineColumn { line: 9, column: 46 } }, internal_offset: 0, content: "***Bold and italic*** or ___triple emphasis___\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Emph, sourcepos: Sourcepos { start: LineColumn { line: 9, column: 1 }, end: LineColumn { line: 9, column: 21 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Strong, sourcepos: Sourcepos { start: LineColumn { line: 9, column: 2 }, end: LineColumn { line: 9, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("Bold and italic"), sourcepos: Sourcepos { start: LineColumn { line: 9, column: 4 }, end: LineColumn { line: 9, column: 18 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Text(" or "), sourcepos: Sourcepos { start: LineColumn { line: 9, column: 22 }, end: LineColumn { line: 9, column: 25 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Emph, sourcepos: Sourcepos { start: LineColumn { line: 9, column: 26 }, end: LineColumn { line: 9, column: 46 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Strong, sourcepos: Sourcepos { start: LineColumn { line: 9, column: 27 }, end: LineColumn { line: 9, column: 45 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("triple emphasis"), sourcepos: Sourcepos { start: LineColumn { line: 9, column: 29 }, end: LineColumn { line: 9, column: 43 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 11, column: 1 }, end: LineColumn { line: 11, column: 17 } }, internal_offset: 0, content: "~~Strikethrough~~\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Strikethrough, sourcepos: Sourcepos { start: LineColumn { line: 11, column: 1 }, end: LineColumn { line: 11, column: 17 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("Strikethrough"), sourcepos: Sourcepos { start: LineColumn { line: 11, column: 3 }, end: LineColumn { line: 11, column: 15 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: BlockQuote, sourcepos: Sourcepos { start: LineColumn { line: 13, column: 1 }, end: LineColumn { line: 15, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 13, column: 3 }, end: LineColumn { line: 13, column: 13 } }, internal_offset: 0, content: "Blockquotes\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("Blockquotes"), sourcepos: Sourcepos { start: LineColumn { line: 13, column: 3 }, end: LineColumn { line: 13, column: 13 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: BlockQuote, sourcepos: Sourcepos { start: LineColumn { line: 14, column: 3 }, end: LineColumn { line: 15, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 14, column: 5 }, end: LineColumn { line: 14, column: 22 } }, internal_offset: 0, content: "Nested blockquotes\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [4] } }, children: [Node { data: RefCell { value: Ast { value: Text("Nested blockquotes"), sourcepos: Sourcepos { start: LineColumn { line: 14, column: 5 }, end: LineColumn { line: 14, column: 22 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: BlockQuote, sourcepos: Sourcepos { start: LineColumn { line: 15, column: 5 }, end: LineColumn { line: 15, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 15, column: 7 }, end: LineColumn { line: 15, column: 20 } }, internal_offset: 0, content: "Deeper nesting\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [6] } }, children: [Node { data: RefCell { value: Ast { value: Text("Deeper nesting"), sourcepos: Sourcepos { start: LineColumn { line: 15, column: 7 }, end: LineColumn { line: 15, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 17, column: 1 }, end: LineColumn { line: 17, column: 11 } }, internal_offset: 3, content: "Headings", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Headings"), sourcepos: Sourcepos { start: LineColumn { line: 17, column: 4 }, end: LineColumn { line: 17, column: 11 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 1, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 19, column: 1 }, end: LineColumn { line: 19, column: 11 } }, internal_offset: 2, content: "Heading 1", open: false, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("Heading 1"), sourcepos: Sourcepos { start: LineColumn { line: 19, column: 3 }, end: LineColumn { line: 19, column: 11 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 20, column: 1 }, end: LineColumn { line: 20, column: 12 } }, internal_offset: 3, content: "Heading 2", open: false, last_line_blank: false, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Heading 2"), sourcepos: Sourcepos { start: LineColumn { line: 20, column: 4 }, end: LineColumn { line: 20, column: 12 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 3, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 21, column: 1 }, end: LineColumn { line: 21, column: 13 } }, internal_offset: 4, content: "Heading 3", open: false, last_line_blank: false, table_visited: false, line_offsets: [4] } }, children: [Node { data: RefCell { value: Ast { value: Text("Heading 3"), sourcepos: Sourcepos { start: LineColumn { line: 21, column: 5 }, end: LineColumn { line: 21, column: 13 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 4, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 22, column: 1 }, end: LineColumn { line: 22, column: 14 } }, internal_offset: 5, content: "Heading 4", open: false, last_line_blank: false, table_visited: false, line_offsets: [5] } }, children: [Node { data: RefCell { value: Ast { value: Text("Heading 4"), sourcepos: Sourcepos { start: LineColumn { line: 22, column: 6 }, end: LineColumn { line: 22, column: 14 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 5, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 23, column: 1 }, end: LineColumn { line: 23, column: 15 } }, internal_offset: 6, content: "Heading 5", open: false, last_line_blank: false, table_visited: false, line_offsets: [6] } }, children: [Node { data: RefCell { value: Ast { value: Text("Heading 5"), sourcepos: Sourcepos { start: LineColumn { line: 23, column: 7 }, end: LineColumn { line: 23, column: 15 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 6, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 24, column: 1 }, end: LineColumn { line: 24, column: 16 } }, internal_offset: 7, content: "Heading 6", open: false, last_line_blank: true, table_visited: false, line_offsets: [7] } }, children: [Node { data: RefCell { value: Ast { value: Text("Heading 6"), sourcepos: Sourcepos { start: LineColumn { line: 24, column: 8 }, end: LineColumn { line: 24, column: 16 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 1, setext: true }), sourcepos: Sourcepos { start: LineColumn { line: 26, column: 1 }, end: LineColumn { line: 27, column: 21 } }, internal_offset: 0, content: "Alternative Heading 1\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Text("Alternative Heading 1"), sourcepos: Sourcepos { start: LineColumn { line: 26, column: 1 }, end: LineColumn { line: 26, column: 21 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: true }), sourcepos: Sourcepos { start: LineColumn { line: 29, column: 1 }, end: LineColumn { line: 30, column: 21 } }, internal_offset: 0, content: "Alternative Heading 2\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Text("Alternative Heading 2"), sourcepos: Sourcepos { start: LineColumn { line: 29, column: 1 }, end: LineColumn { line: 29, column: 21 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 32, column: 1 }, end: LineColumn { line: 32, column: 8 } }, internal_offset: 3, content: "Links", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Links"), sourcepos: Sourcepos { start: LineColumn { line: 32, column: 4 }, end: LineColumn { line: 32, column: 8 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 34, column: 1 }, end: LineColumn { line: 34, column: 33 } }, internal_offset: 0, content: "[Basic link](https://example.com)\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Link(NodeLink { url: "https://example.com", title: "" }), sourcepos: Sourcepos { start: LineColumn { line: 34, column: 1 }, end: LineColumn { line: 34, column: 33 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("Basic link"), sourcepos: Sourcepos { start: LineColumn { line: 34, column: 2 }, end: LineColumn { line: 34, column: 11 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 36, column: 1 }, end: LineColumn { line: 36, column: 51 } }, internal_offset: 0, content: "[Link with title](https://example.com \"Link title\")\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Link(NodeLink { url: "https://example.com", title: "Link title" }), sourcepos: Sourcepos { start: LineColumn { line: 36, column: 1 }, end: LineColumn { line: 36, column: 51 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("Link "), sourcepos: Sourcepos { start: LineColumn { line: 36, column: 2 }, end: LineColumn { line: 36, column: 6 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text("w"), sourcepos: Sourcepos { start: LineColumn { line: 36, column: 7 }, end: LineColumn { line: 36, column: 7 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text("ith title"), sourcepos: Sourcepos { start: LineColumn { line: 36, column: 8 }, end: LineColumn { line: 36, column: 16 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 38, column: 1 }, end: LineColumn { line: 38, column: 21 } }, internal_offset: 0, content: "[Reference link][ref]\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Link(NodeLink { url: "https://example.com", title: "Reference Link" }), sourcepos: Sourcepos { start: LineColumn { line: 38, column: 1 }, end: LineColumn { line: 38, column: 21 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("Reference link"), sourcepos: Sourcepos { start: LineColumn { line: 38, column: 2 }, end: LineColumn { line: 38, column: 15 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 42, column: 1 }, end: LineColumn { line: 42, column: 33 } }, internal_offset: 0, content: "<https://example.com> (Autolinks)\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Link(NodeLink { url: "https://example.com", title: "" }), sourcepos: Sourcepos { start: LineColumn { line: 42, column: 1 }, end: LineColumn { line: 42, column: 21 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("https://example.com"), sourcepos: Sourcepos { start: LineColumn { line: 42, column: 2 }, end: LineColumn { line: 42, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Text(" (Autolinks)"), sourcepos: Sourcepos { start: LineColumn { line: 42, column: 22 }, end: LineColumn { line: 42, column: 33 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 44, column: 1 }, end: LineColumn { line: 44, column: 9 } }, internal_offset: 3, content: "Images", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Images"), sourcepos: Sourcepos { start: LineColumn { line: 44, column: 4 }, end: LineColumn { line: 44, column: 9 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 46, column: 1 }, end: LineColumn { line: 46, column: 52 } }, internal_offset: 0, content: "![Alt text for image](https://example.com/image.jpg)\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Image(NodeLink { url: "https://example.com/image.jpg", title: "" }), sourcepos: Sourcepos { start: LineColumn { line: 46, column: 1 }, end: LineColumn { line: 46, column: 52 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("Alt text for image"), sourcepos: Sourcepos { start: LineColumn { line: 46, column: 3 }, end: LineColumn { line: 46, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 48, column: 1 }, end: LineColumn { line: 48, column: 67 } }, internal_offset: 0, content: "![Alt text with title](https://example.com/image.jpg \"Image title\")\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Image(NodeLink { url: "https://example.com/image.jpg", title: "Image title" }), sourcepos: Sourcepos { start: LineColumn { line: 48, column: 1 }, end: LineColumn { line: 48, column: 67 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("Alt text "), sourcepos: Sourcepos { start: LineColumn { line: 48, column: 3 }, end: LineColumn { line: 48, column: 11 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text("w"), sourcepos: Sourcepos { start: LineColumn { line: 48, column: 12 }, end: LineColumn { line: 48, column: 12 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text("ith title"), sourcepos: Sourcepos { start: LineColumn { line: 48, column: 13 }, end: LineColumn { line: 48, column: 21 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 50, column: 1 }, end: LineColumn { line: 50, column: 72 } }, internal_offset: 0, content: "[![Image with link](https://example.com/image.jpg)](https://example.com)\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Link(NodeLink { url: "https://example.com", title: "" }), sourcepos: Sourcepos { start: LineColumn { line: 50, column: 1 }, end: LineColumn { line: 50, column: 72 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Image(NodeLink { url: "https://example.com/image.jpg", title: "" }), sourcepos: Sourcepos { start: LineColumn { line: 50, column: 2 }, end: LineColumn { line: 50, column: 50 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("Image "), sourcepos: Sourcepos { start: LineColumn { line: 50, column: 4 }, end: LineColumn { line: 50, column: 9 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text("w"), sourcepos: Sourcepos { start: LineColumn { line: 50, column: 10 }, end: LineColumn { line: 50, column: 10 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text("ith link"), sourcepos: Sourcepos { start: LineColumn { line: 50, column: 11 }, end: LineColumn { line: 50, column: 18 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 52, column: 1 }, end: LineColumn { line: 52, column: 8 } }, internal_offset: 3, content: "Lists", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Lists"), sourcepos: Sourcepos { start: LineColumn { line: 52, column: 4 }, end: LineColumn { line: 52, column: 8 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 3, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 54, column: 1 }, end: LineColumn { line: 54, column: 19 } }, internal_offset: 4, content: "Unordered Lists", open: false, last_line_blank: true, table_visited: false, line_offsets: [4] } }, children: [Node { data: RefCell { value: Ast { value: Text("Unordered Lists"), sourcepos: Sourcepos { start: LineColumn { line: 54, column: 5 }, end: LineColumn { line: 54, column: 19 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: List(NodeList { list_type: Bullet, marker_offset: 0, padding: 2, start: 1, delimiter: Period, bullet_char: 42, tight: true, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 56, column: 1 }, end: LineColumn { line: 61, column: 0 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Item(NodeList { list_type: Bullet, marker_offset: 0, padding: 2, start: 1, delimiter: Period, bullet_char: 42, tight: false, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 56, column: 1 }, end: LineColumn { line: 56, column: 8 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 56, column: 3 }, end: LineColumn { line: 56, column: 8 } }, internal_offset: 0, content: "Item 1\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("Item 1"), sourcepos: Sourcepos { start: LineColumn { line: 56, column: 3 }, end: LineColumn { line: 56, column: 8 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Item(NodeList { list_type: Bullet, marker_offset: 0, padding: 2, start: 1, delimiter: Period, bullet_char: 42, tight: false, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 57, column: 1 }, end: LineColumn { line: 59, column: 24 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 57, column: 3 }, end: LineColumn { line: 57, column: 8 } }, internal_offset: 0, content: "Item 2\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("Item 2"), sourcepos: Sourcepos { start: LineColumn { line: 57, column: 3 }, end: LineColumn { line: 57, column: 8 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: List(NodeList { list_type: Bullet, marker_offset: 0, padding: 2, start: 1, delimiter: Period, bullet_char: 42, tight: true, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 58, column: 3 }, end: LineColumn { line: 59, column: 24 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Item(NodeList { list_type: Bullet, marker_offset: 0, padding: 2, start: 1, delimiter: Period, bullet_char: 42, tight: false, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 58, column: 3 }, end: LineColumn { line: 59, column: 24 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 58, column: 5 }, end: LineColumn { line: 58, column: 15 } }, internal_offset: 0, content: "Nested item\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [4] } }, children: [Node { data: RefCell { value: Ast { value: Text("Nested item"), sourcepos: Sourcepos { start: LineColumn { line: 58, column: 5 }, end: LineColumn { line: 58, column: 15 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: List(NodeList { list_type: Bullet, marker_offset: 0, padding: 2, start: 1, delimiter: Period, bullet_char: 42, tight: true, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 59, column: 5 }, end: LineColumn { line: 59, column: 24 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Item(NodeList { list_type: Bullet, marker_offset: 0, padding: 2, start: 1, delimiter: Period, bullet_char: 42, tight: false, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 59, column: 5 }, end: LineColumn { line: 59, column: 24 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 59, column: 7 }, end: LineColumn { line: 59, column: 24 } }, internal_offset: 0, content: "Deeper nested item\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [6] } }, children: [Node { data: RefCell { value: Ast { value: Text("Deeper nested item"), sourcepos: Sourcepos { start: LineColumn { line: 59, column: 7 }, end: LineColumn { line: 59, column: 24 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] }] }] }] }, Node { data: RefCell { value: Ast { value: Item(NodeList { list_type: Bullet, marker_offset: 0, padding: 2, start: 1, delimiter: Period, bullet_char: 42, tight: false, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 60, column: 1 }, end: LineColumn { line: 61, column: 0 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 60, column: 3 }, end: LineColumn { line: 60, column: 8 } }, internal_offset: 0, content: "Item 3\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("Item 3"), sourcepos: Sourcepos { start: LineColumn { line: 60, column: 3 }, end: LineColumn { line: 60, column: 8 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] }, Node { data: RefCell { value: Ast { value: List(NodeList { list_type: Bullet, marker_offset: 0, padding: 2, start: 1, delimiter: Period, bullet_char: 45, tight: true, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 62, column: 1 }, end: LineColumn { line: 62, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Item(NodeList { list_type: Bullet, marker_offset: 0, padding: 2, start: 1, delimiter: Period, bullet_char: 45, tight: false, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 62, column: 1 }, end: LineColumn { line: 62, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 62, column: 3 }, end: LineColumn { line: 62, column: 20 } }, internal_offset: 0, content: "Alternative bullet\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("Alternative bullet"), sourcepos: Sourcepos { start: LineColumn { line: 62, column: 3 }, end: LineColumn { line: 62, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] }, Node { data: RefCell { value: Ast { value: List(NodeList { list_type: Bullet, marker_offset: 0, padding: 2, start: 1, delimiter: Period, bullet_char: 43, tight: true, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 63, column: 1 }, end: LineColumn { line: 64, column: 0 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Item(NodeList { list_type: Bullet, marker_offset: 0, padding: 2, start: 1, delimiter: Period, bullet_char: 43, tight: false, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 63, column: 1 }, end: LineColumn { line: 64, column: 0 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 63, column: 3 }, end: LineColumn { line: 63, column: 21 } }, internal_offset: 0, content: "Another alternative\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("Another alternative"), sourcepos: Sourcepos { start: LineColumn { line: 63, column: 3 }, end: LineColumn { line: 63, column: 21 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 3, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 65, column: 1 }, end: LineColumn { line: 65, column: 17 } }, internal_offset: 4, content: "Ordered Lists", open: false, last_line_blank: true, table_visited: false, line_offsets: [4] } }, children: [Node { data: RefCell { value: Ast { value: Text("Ordered Lists"), sourcepos: Sourcepos { start: LineColumn { line: 65, column: 5 }, end: LineColumn { line: 65, column: 17 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: List(NodeList { list_type: Ordered, marker_offset: 0, padding: 3, start: 1, delimiter: Period, bullet_char: 0, tight: true, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 67, column: 1 }, end: LineColumn { line: 72, column: 0 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Item(NodeList { list_type: Ordered, marker_offset: 0, padding: 3, start: 1, delimiter: Period, bullet_char: 0, tight: false, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 67, column: 1 }, end: LineColumn { line: 67, column: 13 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 67, column: 4 }, end: LineColumn { line: 67, column: 13 } }, internal_offset: 0, content: "First item\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("First item"), sourcepos: Sourcepos { start: LineColumn { line: 67, column: 4 }, end: LineColumn { line: 67, column: 13 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Item(NodeList { list_type: Ordered, marker_offset: 0, padding: 3, start: 2, delimiter: Period, bullet_char: 0, tight: false, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 68, column: 1 }, end: LineColumn { line: 70, column: 25 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 68, column: 4 }, end: LineColumn { line: 68, column: 14 } }, internal_offset: 0, content: "Second item\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Second item"), sourcepos: Sourcepos { start: LineColumn { line: 68, column: 4 }, end: LineColumn { line: 68, column: 14 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: List(NodeList { list_type: Ordered, marker_offset: 0, padding: 3, start: 1, delimiter: Period, bullet_char: 0, tight: true, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 69, column: 4 }, end: LineColumn { line: 70, column: 25 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Item(NodeList { list_type: Ordered, marker_offset: 0, padding: 3, start: 1, delimiter: Period, bullet_char: 0, tight: false, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 69, column: 4 }, end: LineColumn { line: 69, column: 25 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 69, column: 7 }, end: LineColumn { line: 69, column: 25 } }, internal_offset: 0, content: "Nested ordered item\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [6] } }, children: [Node { data: RefCell { value: Ast { value: Text("Nested ordered item"), sourcepos: Sourcepos { start: LineColumn { line: 69, column: 7 }, end: LineColumn { line: 69, column: 25 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Item(NodeList { list_type: Ordered, marker_offset: 0, padding: 3, start: 2, delimiter: Period, bullet_char: 0, tight: false, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 70, column: 4 }, end: LineColumn { line: 70, column: 25 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 70, column: 7 }, end: LineColumn { line: 70, column: 25 } }, internal_offset: 0, content: "Another nested item\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [6] } }, children: [Node { data: RefCell { value: Ast { value: Text("Another nested item"), sourcepos: Sourcepos { start: LineColumn { line: 70, column: 7 }, end: LineColumn { line: 70, column: 25 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] }] }, Node { data: RefCell { value: Ast { value: Item(NodeList { list_type: Ordered, marker_offset: 0, padding: 3, start: 3, delimiter: Period, bullet_char: 0, tight: false, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 71, column: 1 }, end: LineColumn { line: 72, column: 0 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 71, column: 4 }, end: LineColumn { line: 71, column: 13 } }, internal_offset: 0, content: "Third item\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Third item"), sourcepos: Sourcepos { start: LineColumn { line: 71, column: 4 }, end: LineColumn { line: 71, column: 13 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 3, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 73, column: 1 }, end: LineColumn { line: 73, column: 29 } }, internal_offset: 4, content: "Task Lists (GFM specific)", open: false, last_line_blank: true, table_visited: false, line_offsets: [4] } }, children: [Node { data: RefCell { value: Ast { value: Text("Task Lists (GFM specific)"), sourcepos: Sourcepos { start: LineColumn { line: 73, column: 5 }, end: LineColumn { line: 73, column: 29 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: List(NodeList { list_type: Bullet, marker_offset: 0, padding: 2, start: 1, delimiter: Period, bullet_char: 45, tight: true, is_task_list: true }), sourcepos: Sourcepos { start: LineColumn { line: 75, column: 1 }, end: LineColumn { line: 78, column: 0 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: TaskItem(Some('x')), sourcepos: Sourcepos { start: LineColumn { line: 75, column: 1 }, end: LineColumn { line: 75, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 75, column: 7 }, end: LineColumn { line: 75, column: 20 } }, internal_offset: 0, content: "[x] Completed task\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("Completed task"), sourcepos: Sourcepos { start: LineColumn { line: 75, column: 7 }, end: LineColumn { line: 75, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: TaskItem(None), sourcepos: Sourcepos { start: LineColumn { line: 76, column: 1 }, end: LineColumn { line: 76, column: 21 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 76, column: 7 }, end: LineColumn { line: 76, column: 21 } }, internal_offset: 0, content: "[ ] Incomplete task\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("Incomplete task"), sourcepos: Sourcepos { start: LineColumn { line: 76, column: 7 }, end: LineColumn { line: 76, column: 21 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: TaskItem(None), sourcepos: Sourcepos { start: LineColumn { line: 77, column: 1 }, end: LineColumn { line: 78, column: 0 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 77, column: 7 }, end: LineColumn { line: 77, column: 36 } }, internal_offset: 0, content: "[ ] \\(Escaped parentheses in task)\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("(Escaped parentheses in task)"), sourcepos: Sourcepos { start: LineColumn { line: 77, column: 7 }, end: LineColumn { line: 77, column: 36 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 3, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 79, column: 1 }, end: LineColumn { line: 79, column: 20 } }, internal_offset: 4, content: "Definition Lists", open: false, last_line_blank: true, table_visited: false, line_offsets: [4] } }, children: [Node { data: RefCell { value: Ast { value: Text("Definition Lists"), sourcepos: Sourcepos { start: LineColumn { line: 79, column: 5 }, end: LineColumn { line: 79, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: DescriptionList, sourcepos: Sourcepos { start: LineColumn { line: 81, column: 1 }, end: LineColumn { line: 84, column: 0 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: DescriptionItem(NodeDescriptionItem { marker_offset: 0, padding: 2, tight: true }), sourcepos: Sourcepos { start: LineColumn { line: 81, column: 1 }, end: LineColumn { line: 82, column: 12 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: DescriptionTerm, sourcepos: Sourcepos { start: LineColumn { line: 82, column: 1 }, end: LineColumn { line: 82, column: 0 } }, internal_offset: 0, content: "", open: true, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 81, column: 1 }, end: LineColumn { line: 81, column: 0 } }, internal_offset: 0, content: "Term\n", open: true, last_line_blank: false, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Text("Term"), sourcepos: Sourcepos { start: LineColumn { line: 81, column: 1 }, end: LineColumn { line: 81, column: 4 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: DescriptionDetails, sourcepos: Sourcepos { start: LineColumn { line: 82, column: 1 }, end: LineColumn { line: 82, column: 12 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 82, column: 3 }, end: LineColumn { line: 82, column: 12 } }, internal_offset: 0, content: "Definition\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("Definition"), sourcepos: Sourcepos { start: LineColumn { line: 82, column: 3 }, end: LineColumn { line: 82, column: 12 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] }, Node { data: RefCell { value: Ast { value: DescriptionItem(NodeDescriptionItem { marker_offset: 0, padding: 2, tight: true }), sourcepos: Sourcepos { start: LineColumn { line: 83, column: 1 }, end: LineColumn { line: 84, column: 0 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: DescriptionDetails, sourcepos: Sourcepos { start: LineColumn { line: 83, column: 1 }, end: LineColumn { line: 84, column: 0 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 83, column: 3 }, end: LineColumn { line: 83, column: 20 } }, internal_offset: 0, content: "Another definition\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("Another definition"), sourcepos: Sourcepos { start: LineColumn { line: 83, column: 3 }, end: LineColumn { line: 83, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 85, column: 1 }, end: LineColumn { line: 85, column: 7 } }, internal_offset: 3, content: "Code", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Code"), sourcepos: Sourcepos { start: LineColumn { line: 85, column: 4 }, end: LineColumn { line: 85, column: 7 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 87, column: 1 }, end: LineColumn { line: 87, column: 28 } }, internal_offset: 0, content: "Inline `code` with backticks\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Text("Inline "), sourcepos: Sourcepos { start: LineColumn { line: 87, column: 1 }, end: LineColumn { line: 87, column: 7 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Code(NodeCode { num_backticks: 1, literal: "code" }), sourcepos: Sourcepos { start: LineColumn { line: 87, column: 8 }, end: LineColumn { line: 87, column: 13 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text(" with backticks"), sourcepos: Sourcepos { start: LineColumn { line: 87, column: 14 }, end: LineColumn { line: 87, column: 28 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: CodeBlock(NodeCodeBlock { fenced: true, fence_char: 96, fence_length: 3, fence_offset: 0, info: "", literal: "Code block without syntax highlighting\n" }), sourcepos: Sourcepos { start: LineColumn { line: 89, column: 1 }, end: LineColumn { line: 91, column: 3 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [3, 0] } }, children: [] }, Node { data: RefCell { value: Ast { value: CodeBlock(NodeCodeBlock { fenced: true, fence_char: 96, fence_length: 3, fence_offset: 0, info: "javascript", literal: "// Code block with syntax highlighting\nfunction example() {\n  console.log(\"Hello, world!\");\n}\n" }), sourcepos: Sourcepos { start: LineColumn { line: 93, column: 1 }, end: LineColumn { line: 98, column: 3 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [3, 0, 0, 0, 0] } }, children: [] }, Node { data: RefCell { value: Ast { value: CodeBlock(NodeCodeBlock { fenced: false, fence_char: 0, fence_length: 0, fence_offset: 0, info: "", literal: "Indented code block\n(4 spaces or 1 tab)\n" }), sourcepos: Sourcepos { start: LineColumn { line: 100, column: 5 }, end: LineColumn { line: 102, column: 0 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [4, 4, 0] } }, children: [] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 103, column: 1 }, end: LineColumn { line: 103, column: 24 } }, internal_offset: 3, content: "Tables (GFM specific)", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Tables (GFM specific)"), sourcepos: Sourcepos { start: LineColumn { line: 103, column: 4 }, end: LineColumn { line: 103, column: 24 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Table(NodeTable { alignments: [None, Center, Right], num_columns: 3, num_rows: 3, num_nonempty_cells: 9 }), sourcepos: Sourcepos { start: LineColumn { line: 105, column: 1 }, end: LineColumn { line: 109, column: 34 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: TableRow(true), sourcepos: Sourcepos { start: LineColumn { line: 105, column: 1 }, end: LineColumn { line: 105, column: 34 } }, internal_offset: 0, content: "", open: true, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 105, column: 2 }, end: LineColumn { line: 105, column: 11 } }, internal_offset: 1, content: "Header 1", open: true, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("Header 1"), sourcepos: Sourcepos { start: LineColumn { line: 105, column: 3 }, end: LineColumn { line: 105, column: 10 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 105, column: 13 }, end: LineColumn { line: 105, column: 22 } }, internal_offset: 1, content: "Header 2", open: true, last_line_blank: false, table_visited: false, line_offsets: [13] } }, children: [Node { data: RefCell { value: Ast { value: Text("Header 2"), sourcepos: Sourcepos { start: LineColumn { line: 105, column: 14 }, end: LineColumn { line: 105, column: 21 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 105, column: 24 }, end: LineColumn { line: 105, column: 33 } }, internal_offset: 1, content: "Header 3", open: true, last_line_blank: false, table_visited: false, line_offsets: [24] } }, children: [Node { data: RefCell { value: Ast { value: Text("Header 3"), sourcepos: Sourcepos { start: LineColumn { line: 105, column: 25 }, end: LineColumn { line: 105, column: 32 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: TableRow(false), sourcepos: Sourcepos { start: LineColumn { line: 107, column: 1 }, end: LineColumn { line: 107, column: 34 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 107, column: 2 }, end: LineColumn { line: 107, column: 11 } }, internal_offset: 1, content: "Default", open: true, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("Default"), sourcepos: Sourcepos { start: LineColumn { line: 107, column: 3 }, end: LineColumn { line: 107, column: 9 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 107, column: 13 }, end: LineColumn { line: 107, column: 22 } }, internal_offset: 1, content: "Center", open: true, last_line_blank: false, table_visited: false, line_offsets: [13] } }, children: [Node { data: RefCell { value: Ast { value: Text("Center"), sourcepos: Sourcepos { start: LineColumn { line: 107, column: 14 }, end: LineColumn { line: 107, column: 19 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 107, column: 24 }, end: LineColumn { line: 107, column: 33 } }, internal_offset: 1, content: "Right", open: true, last_line_blank: true, table_visited: false, line_offsets: [24] } }, children: [Node { data: RefCell { value: Ast { value: Text("Right"), sourcepos: Sourcepos { start: LineColumn { line: 107, column: 25 }, end: LineColumn { line: 107, column: 29 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: TableRow(false), sourcepos: Sourcepos { start: LineColumn { line: 108, column: 1 }, end: LineColumn { line: 108, column: 34 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 108, column: 2 }, end: LineColumn { line: 108, column: 11 } }, internal_offset: 1, content: "aligned", open: true, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("aligned"), sourcepos: Sourcepos { start: LineColumn { line: 108, column: 3 }, end: LineColumn { line: 108, column: 9 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 108, column: 13 }, end: LineColumn { line: 108, column: 22 } }, internal_offset: 1, content: "aligned", open: true, last_line_blank: false, table_visited: false, line_offsets: [13] } }, children: [Node { data: RefCell { value: Ast { value: Text("aligned"), sourcepos: Sourcepos { start: LineColumn { line: 108, column: 14 }, end: LineColumn { line: 108, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 108, column: 24 }, end: LineColumn { line: 108, column: 33 } }, internal_offset: 1, content: "aligned", open: true, last_line_blank: true, table_visited: false, line_offsets: [24] } }, children: [Node { data: RefCell { value: Ast { value: Text("aligned"), sourcepos: Sourcepos { start: LineColumn { line: 108, column: 25 }, end: LineColumn { line: 108, column: 31 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: TableRow(false), sourcepos: Sourcepos { start: LineColumn { line: 109, column: 1 }, end: LineColumn { line: 109, column: 34 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 109, column: 2 }, end: LineColumn { line: 109, column: 11 } }, internal_offset: 1, content: "cells", open: true, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("cells"), sourcepos: Sourcepos { start: LineColumn { line: 109, column: 3 }, end: LineColumn { line: 109, column: 7 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 109, column: 13 }, end: LineColumn { line: 109, column: 22 } }, internal_offset: 1, content: "cells", open: true, last_line_blank: false, table_visited: false, line_offsets: [13] } }, children: [Node { data: RefCell { value: Ast { value: Text("cells"), sourcepos: Sourcepos { start: LineColumn { line: 109, column: 14 }, end: LineColumn { line: 109, column: 18 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 109, column: 24 }, end: LineColumn { line: 109, column: 33 } }, internal_offset: 1, content: "cells", open: true, last_line_blank: true, table_visited: false, line_offsets: [24] } }, children: [Node { data: RefCell { value: Ast { value: Text("cells"), sourcepos: Sourcepos { start: LineColumn { line: 109, column: 25 }, end: LineColumn { line: 109, column: 29 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] }, Node { data: RefCell { value: Ast { value: Table(NodeTable { alignments: [None, None], num_columns: 2, num_rows: 1, num_nonempty_cells: 2 }), sourcepos: Sourcepos { start: LineColumn { line: 111, column: 1 }, end: LineColumn { line: 113, column: 18 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: TableRow(true), sourcepos: Sourcepos { start: LineColumn { line: 111, column: 1 }, end: LineColumn { line: 111, column: 18 } }, internal_offset: 0, content: "", open: true, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 111, column: 2 }, end: LineColumn { line: 111, column: 9 } }, internal_offset: 1, content: "Simple", open: true, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("Simple"), sourcepos: Sourcepos { start: LineColumn { line: 111, column: 3 }, end: LineColumn { line: 111, column: 8 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 111, column: 11 }, end: LineColumn { line: 111, column: 17 } }, internal_offset: 1, content: "Table", open: true, last_line_blank: false, table_visited: false, line_offsets: [11] } }, children: [Node { data: RefCell { value: Ast { value: Text("Table"), sourcepos: Sourcepos { start: LineColumn { line: 111, column: 12 }, end: LineColumn { line: 111, column: 16 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: TableRow(false), sourcepos: Sourcepos { start: LineColumn { line: 113, column: 1 }, end: LineColumn { line: 113, column: 18 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 113, column: 2 }, end: LineColumn { line: 113, column: 9 } }, internal_offset: 1, content: "No", open: true, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("No"), sourcepos: Sourcepos { start: LineColumn { line: 113, column: 3 }, end: LineColumn { line: 113, column: 4 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: TableCell, sourcepos: Sourcepos { start: LineColumn { line: 113, column: 11 }, end: LineColumn { line: 113, column: 17 } }, internal_offset: 1, content: "frills", open: true, last_line_blank: true, table_visited: false, line_offsets: [11] } }, children: [Node { data: RefCell { value: Ast { value: Text("frills"), sourcepos: Sourcepos { start: LineColumn { line: 113, column: 12 }, end: LineColumn { line: 113, column: 17 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 115, column: 1 }, end: LineColumn { line: 115, column: 19 } }, internal_offset: 3, content: "Horizontal Rules", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Horizontal Rules"), sourcepos: Sourcepos { start: LineColumn { line: 115, column: 4 }, end: LineColumn { line: 115, column: 19 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: ThematicBreak, sourcepos: Sourcepos { start: LineColumn { line: 117, column: 1 }, end: LineColumn { line: 117, column: 3 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: ThematicBreak, sourcepos: Sourcepos { start: LineColumn { line: 119, column: 1 }, end: LineColumn { line: 119, column: 3 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: ThematicBreak, sourcepos: Sourcepos { start: LineColumn { line: 121, column: 1 }, end: LineColumn { line: 121, column: 3 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 123, column: 1 }, end: LineColumn { line: 123, column: 12 } }, internal_offset: 3, content: "Footnotes", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Footnotes"), sourcepos: Sourcepos { start: LineColumn { line: 123, column: 4 }, end: LineColumn { line: 123, column: 12 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 125, column: 1 }, end: LineColumn { line: 125, column: 38 } }, internal_offset: 0, content: "Here's a sentence with a footnote[^1].\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Text("Here’s a sentence with a footnote"), sourcepos: Sourcepos { start: LineColumn { line: 125, column: 1 }, end: LineColumn { line: 125, column: 33 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: FootnoteReference(NodeFootnoteReference { name: "1", ref_num: 1, ix: 1 }), sourcepos: Sourcepos { start: LineColumn { line: 125, column: 34 }, end: LineColumn { line: 125, column: 37 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text("."), sourcepos: Sourcepos { start: LineColumn { line: 125, column: 38 }, end: LineColumn { line: 125, column: 38 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 129, column: 1 }, end: LineColumn { line: 129, column: 39 } }, internal_offset: 3, content: "Superscript and Subscript Extensions", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Superscript and Subscript Extensions"), sourcepos: Sourcepos { start: LineColumn { line: 129, column: 4 }, end: LineColumn { line: 129, column: 39 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 131, column: 1 }, end: LineColumn { line: 131, column: 17 } }, internal_offset: 0, content: "H~2~O (subscript)\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Text("H"), sourcepos: Sourcepos { start: LineColumn { line: 131, column: 1 }, end: LineColumn { line: 131, column: 1 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Strikethrough, sourcepos: Sourcepos { start: LineColumn { line: 131, column: 2 }, end: LineColumn { line: 131, column: 4 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("2"), sourcepos: Sourcepos { start: LineColumn { line: 131, column: 3 }, end: LineColumn { line: 131, column: 3 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Text("O (subscript)"), sourcepos: Sourcepos { start: LineColumn { line: 131, column: 5 }, end: LineColumn { line: 131, column: 17 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 133, column: 1 }, end: LineColumn { line: 133, column: 18 } }, internal_offset: 0, content: "X^2^ (superscript)\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Text("X"), sourcepos: Sourcepos { start: LineColumn { line: 133, column: 1 }, end: LineColumn { line: 133, column: 1 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Superscript, sourcepos: Sourcepos { start: LineColumn { line: 133, column: 2 }, end: LineColumn { line: 133, column: 4 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("2"), sourcepos: Sourcepos { start: LineColumn { line: 133, column: 3 }, end: LineColumn { line: 133, column: 3 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Text(" (superscript)"), sourcepos: Sourcepos { start: LineColumn { line: 133, column: 5 }, end: LineColumn { line: 133, column: 18 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 135, column: 1 }, end: LineColumn { line: 135, column: 22 } }, internal_offset: 3, content: "Escaping Characters", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Escaping Characters"), sourcepos: Sourcepos { start: LineColumn { line: 135, column: 4 }, end: LineColumn { line: 135, column: 22 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 137, column: 1 }, end: LineColumn { line: 137, column: 22 } }, internal_offset: 0, content: "\\* Escaped asterisk \\*\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Text("* Escaped asterisk *"), sourcepos: Sourcepos { start: LineColumn { line: 137, column: 1 }, end: LineColumn { line: 137, column: 22 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 139, column: 1 }, end: LineColumn { line: 139, column: 20 } }, internal_offset: 0, content: "\\\\ Escaped backslash\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Text("\\ Escaped backslash"), sourcepos: Sourcepos { start: LineColumn { line: 139, column: 1 }, end: LineColumn { line: 139, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 141, column: 1 }, end: LineColumn { line: 141, column: 19 } }, internal_offset: 0, content: "\\` Escaped backtick\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Text("` Escaped backtick"), sourcepos: Sourcepos { start: LineColumn { line: 141, column: 1 }, end: LineColumn { line: 141, column: 19 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 143, column: 1 }, end: LineColumn { line: 143, column: 33 } }, internal_offset: 3, content: "HTML (Supported in GFM/Comrak)", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("HTML (Supported in GFM/Comrak)"), sourcepos: Sourcepos { start: LineColumn { line: 143, column: 4 }, end: LineColumn { line: 143, column: 33 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: HtmlBlock(NodeHtmlBlock { block_type: 6, literal: "<details>\n<summary>Expandable section</summary>\nContent inside expandable section\n</details>\n" }), sourcepos: Sourcepos { start: LineColumn { line: 145, column: 1 }, end: LineColumn { line: 148, column: 10 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [0, 0, 0, 0] } }, children: [] }, Node { data: RefCell { value: Ast { value: HtmlBlock(NodeHtmlBlock { block_type: 6, literal: "<div align=\"center\">\nCentered content\n</div>\n" }), sourcepos: Sourcepos { start: LineColumn { line: 150, column: 1 }, end: LineColumn { line: 152, column: 6 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [0, 0, 0] } }, children: [] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 154, column: 1 }, end: LineColumn { line: 154, column: 19 } }, internal_offset: 3, content: "URL Auto-linking", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("URL Auto-linking"), sourcepos: Sourcepos { start: LineColumn { line: 154, column: 4 }, end: LineColumn { line: 154, column: 19 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 156, column: 1 }, end: LineColumn { line: 156, column: 19 } }, internal_offset: 0, content: "https://example.com\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Link(NodeLink { url: "https://example.com", title: "" }), sourcepos: Sourcepos { start: LineColumn { line: 156, column: 1 }, end: LineColumn { line: 156, column: 19 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("https://example.com"), sourcepos: Sourcepos { start: LineColumn { line: 156, column: 1 }, end: LineColumn { line: 156, column: 19 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 158, column: 1 }, end: LineColumn { line: 158, column: 15 } }, internal_offset: 0, content: "www.example.com\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Link(NodeLink { url: "http://www.example.com", title: "" }), sourcepos: Sourcepos { start: LineColumn { line: 158, column: 1 }, end: LineColumn { line: 158, column: 15 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("www.example.com"), sourcepos: Sourcepos { start: LineColumn { line: 158, column: 1 }, end: LineColumn { line: 158, column: 15 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 160, column: 1 }, end: LineColumn { line: 160, column: 34 } }, internal_offset: 3, content: "Emoji Shortcodes (GFM specific)", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Emoji Shortcodes (GFM specific)"), sourcepos: Sourcepos { start: LineColumn { line: 160, column: 4 }, end: LineColumn { line: 160, column: 34 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 162, column: 1 }, end: LineColumn { line: 162, column: 26 } }, internal_offset: 0, content: ":smile: :heart: :thumbsup:\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Text(":smile: :heart: :thumbsup:"), sourcepos: Sourcepos { start: LineColumn { line: 162, column: 1 }, end: LineColumn { line: 162, column: 26 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 164, column: 1 }, end: LineColumn { line: 164, column: 14 } }, internal_offset: 3, content: "Line Breaks", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Line Breaks"), sourcepos: Sourcepos { start: LineColumn { line: 164, column: 4 }, end: LineColumn { line: 164, column: 14 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 166, column: 1 }, end: LineColumn { line: 167, column: 9 } }, internal_offset: 0, content: "Line with two spaces at end  \nNext line\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0, 0] } }, children: [Node { data: RefCell { value: Ast { value: Text("Line with two spaces at end"), sourcepos: Sourcepos { start: LineColumn { line: 166, column: 1 }, end: LineColumn { line: 166, column: 27 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: LineBreak, sourcepos: Sourcepos { start: LineColumn { line: 166, column: 28 }, end: LineColumn { line: 166, column: 30 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text("Next line"), sourcepos: Sourcepos { start: LineColumn { line: 167, column: 1 }, end: LineColumn { line: 167, column: 9 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 169, column: 1 }, end: LineColumn { line: 170, column: 9 } }, internal_offset: 0, content: "Line with backslash at end\\\nNext line\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0, 0] } }, children: [Node { data: RefCell { value: Ast { value: Text("Line with backslash at end"), sourcepos: Sourcepos { start: LineColumn { line: 169, column: 1 }, end: LineColumn { line: 169, column: 26 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: LineBreak, sourcepos: Sourcepos { start: LineColumn { line: 169, column: 27 }, end: LineColumn { line: 169, column: 28 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text("Next line"), sourcepos: Sourcepos { start: LineColumn { line: 170, column: 1 }, end: LineColumn { line: 170, column: 9 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 172, column: 1 }, end: LineColumn { line: 172, column: 11 } }, internal_offset: 3, content: "Comments", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Comments"), sourcepos: Sourcepos { start: LineColumn { line: 172, column: 4 }, end: LineColumn { line: 172, column: 11 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: HtmlBlock(NodeHtmlBlock { block_type: 2, literal: "<!--\nHTML style comment\n-->\n" }), sourcepos: Sourcepos { start: LineColumn { line: 176, column: 1 }, end: LineColumn { line: 177, column: 18 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [0, 0, 0] } }, children: [] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 180, column: 1 }, end: LineColumn { line: 180, column: 13 } }, internal_offset: 3, content: "Extensions", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Extensions"), sourcepos: Sourcepos { start: LineColumn { line: 180, column: 4 }, end: LineColumn { line: 180, column: 13 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 3, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 182, column: 1 }, end: LineColumn { line: 182, column: 20 } }, internal_offset: 4, content: "Highlighted Text", open: false, last_line_blank: true, table_visited: false, line_offsets: [4] } }, children: [Node { data: RefCell { value: Ast { value: Text("Highlighted Text"), sourcepos: Sourcepos { start: LineColumn { line: 182, column: 5 }, end: LineColumn { line: 182, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 184, column: 1 }, end: LineColumn { line: 184, column: 47 } }, internal_offset: 0, content: "==Highlighted text== (if enabled in the parser)\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Text("==Highlighted text== (if enabled in the parser)"), sourcepos: Sourcepos { start: LineColumn { line: 184, column: 1 }, end: LineColumn { line: 184, column: 47 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 3, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 186, column: 1 }, end: LineColumn { line: 186, column: 24 } }, internal_offset: 4, content: "Admonitions/Callouts", open: false, last_line_blank: true, table_visited: false, line_offsets: [4] } }, children: [Node { data: RefCell { value: Ast { value: Text("Admonitions/Callouts"), sourcepos: Sourcepos { start: LineColumn { line: 186, column: 5 }, end: LineColumn { line: 186, column: 24 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Alert(NodeAlert { alert_type: Note, title: None, multiline: false, fence_length: 1, fence_offset: 0 }), sourcepos: Sourcepos { start: LineColumn { line: 188, column: 1 }, end: LineColumn { line: 189, column: 49 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 189, column: 3 }, end: LineColumn { line: 189, column: 49 } }, internal_offset: 0, content: "This is a note admonition block in GitHub style\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("This is a note admonition block in GitHub style"), sourcepos: Sourcepos { start: LineColumn { line: 189, column: 3 }, end: LineColumn { line: 189, column: 49 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Alert(NodeAlert { alert_type: Warning, title: None, multiline: false, fence_length: 1, fence_offset: 0 }), sourcepos: Sourcepos { start: LineColumn { line: 191, column: 1 }, end: LineColumn { line: 192, column: 36 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 192, column: 3 }, end: LineColumn { line: 192, column: 36 } }, internal_offset: 0, content: "This is a warning admonition block\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("This is a warning admonition block"), sourcepos: Sourcepos { start: LineColumn { line: 192, column: 3 }, end: LineColumn { line: 192, column: 36 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Alert(NodeAlert { alert_type: Important, title: None, multiline: false, fence_length: 1, fence_offset: 0 }), sourcepos: Sourcepos { start: LineColumn { line: 194, column: 1 }, end: LineColumn { line: 195, column: 40 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 195, column: 3 }, end: LineColumn { line: 195, column: 40 } }, internal_offset: 0, content: "This highlights important information \n", open: false, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("This highlights important information"), sourcepos: Sourcepos { start: LineColumn { line: 195, column: 3 }, end: LineColumn { line: 195, column: 39 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Alert(NodeAlert { alert_type: Tip, title: None, multiline: false, fence_length: 1, fence_offset: 0 }), sourcepos: Sourcepos { start: LineColumn { line: 197, column: 1 }, end: LineColumn { line: 198, column: 23 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 198, column: 3 }, end: LineColumn { line: 198, column: 23 } }, internal_offset: 0, content: "This is a helpful tip\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("This is a helpful tip"), sourcepos: Sourcepos { start: LineColumn { line: 198, column: 3 }, end: LineColumn { line: 198, column: 23 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Alert(NodeAlert { alert_type: Caution, title: None, multiline: false, fence_length: 1, fence_offset: 0 }), sourcepos: Sourcepos { start: LineColumn { line: 200, column: 1 }, end: LineColumn { line: 201, column: 48 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 201, column: 3 }, end: LineColumn { line: 201, column: 48 } }, internal_offset: 0, content: "This indicates a dangerous or error-prone step\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [2] } }, children: [Node { data: RefCell { value: Ast { value: Text("This indicates a dangerous or error-prone step"), sourcepos: Sourcepos { start: LineColumn { line: 201, column: 3 }, end: LineColumn { line: 201, column: 48 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: BlockQuote, sourcepos: Sourcepos { start: LineColumn { line: 203, column: 1 }, end: LineColumn { line: 204, column: 35 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 203, column: 3 }, end: LineColumn { line: 204, column: 35 } }, internal_offset: 0, content: "**Note**\nThis is an alternative note style\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [2, 2] } }, children: [Node { data: RefCell { value: Ast { value: Strong, sourcepos: Sourcepos { start: LineColumn { line: 203, column: 3 }, end: LineColumn { line: 203, column: 10 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("Note"), sourcepos: Sourcepos { start: LineColumn { line: 203, column: 5 }, end: LineColumn { line: 203, column: 8 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: SoftBreak, sourcepos: Sourcepos { start: LineColumn { line: 203, column: 11 }, end: LineColumn { line: 203, column: 11 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text("This is an alternative note style"), sourcepos: Sourcepos { start: LineColumn { line: 204, column: 3 }, end: LineColumn { line: 204, column: 35 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 3, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 206, column: 1 }, end: LineColumn { line: 206, column: 33 } }, internal_offset: 4, content: "Fancy Lists (with attributes)", open: false, last_line_blank: true, table_visited: false, line_offsets: [4] } }, children: [Node { data: RefCell { value: Ast { value: Text("Fancy Lists (with attributes)"), sourcepos: Sourcepos { start: LineColumn { line: 206, column: 5 }, end: LineColumn { line: 206, column: 33 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: List(NodeList { list_type: Ordered, marker_offset: 0, padding: 3, start: 1, delimiter: Period, bullet_char: 0, tight: true, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 208, column: 1 }, end: LineColumn { line: 212, column: 0 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Item(NodeList { list_type: Ordered, marker_offset: 0, padding: 3, start: 1, delimiter: Period, bullet_char: 0, tight: false, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 208, column: 1 }, end: LineColumn { line: 209, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 208, column: 4 }, end: LineColumn { line: 209, column: 20 } }, internal_offset: 0, content: "First item\n{: .custom-class}\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [3, 3] } }, children: [Node { data: RefCell { value: Ast { value: Text("First item"), sourcepos: Sourcepos { start: LineColumn { line: 208, column: 4 }, end: LineColumn { line: 208, column: 13 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: SoftBreak, sourcepos: Sourcepos { start: LineColumn { line: 208, column: 14 }, end: LineColumn { line: 208, column: 14 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text("{: .custom-class}"), sourcepos: Sourcepos { start: LineColumn { line: 209, column: 4 }, end: LineColumn { line: 209, column: 20 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }, Node { data: RefCell { value: Ast { value: Item(NodeList { list_type: Ordered, marker_offset: 0, padding: 3, start: 2, delimiter: Period, bullet_char: 0, tight: false, is_task_list: false }), sourcepos: Sourcepos { start: LineColumn { line: 210, column: 1 }, end: LineColumn { line: 212, column: 0 } }, internal_offset: 0, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 210, column: 4 }, end: LineColumn { line: 211, column: 17 } }, internal_offset: 0, content: "Second item\n{: #custom-id}\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [3, 3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Second item"), sourcepos: Sourcepos { start: LineColumn { line: 210, column: 4 }, end: LineColumn { line: 210, column: 14 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: SoftBreak, sourcepos: Sourcepos { start: LineColumn { line: 210, column: 15 }, end: LineColumn { line: 210, column: 15 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text("{: #custom-id}"), sourcepos: Sourcepos { start: LineColumn { line: 211, column: 4 }, end: LineColumn { line: 211, column: 17 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] }, Node { data: RefCell { value: Ast { value: Heading(NodeHeading { level: 2, setext: false }), sourcepos: Sourcepos { start: LineColumn { line: 213, column: 1 }, end: LineColumn { line: 213, column: 45 } }, internal_offset: 3, content: "Math (if MathJax/KaTeX support is enabled)", open: false, last_line_blank: true, table_visited: false, line_offsets: [3] } }, children: [Node { data: RefCell { value: Ast { value: Text("Math (if MathJax/KaTeX support is enabled)"), sourcepos: Sourcepos { start: LineColumn { line: 213, column: 4 }, end: LineColumn { line: 213, column: 45 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 215, column: 1 }, end: LineColumn { line: 215, column: 18 } }, internal_offset: 0, content: "Inline: $E = mc^2$\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [0] } }, children: [Node { data: RefCell { value: Ast { value: Text("Inline: $E = mc^2$"), sourcepos: Sourcepos { start: LineColumn { line: 215, column: 1 }, end: LineColumn { line: 215, column: 18 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 217, column: 1 }, end: LineColumn { line: 220, column: 2 } }, internal_offset: 0, content: "Display: \n$$\n\\frac{d}{dx}(e^x) = e^x\n$$\n", open: false, last_line_blank: false, table_visited: false, line_offsets: [0, 0, 0, 0] } }, children: [Node { data: RefCell { value: Ast { value: Text("Display:"), sourcepos: Sourcepos { start: LineColumn { line: 217, column: 1 }, end: LineColumn { line: 217, column: 8 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: SoftBreak, sourcepos: Sourcepos { start: LineColumn { line: 217, column: 10 }, end: LineColumn { line: 217, column: 10 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text("$$"), sourcepos: Sourcepos { start: LineColumn { line: 218, column: 1 }, end: LineColumn { line: 218, column: 2 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: SoftBreak, sourcepos: Sourcepos { start: LineColumn { line: 218, column: 3 }, end: LineColumn { line: 218, column: 3 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text("\\frac{d}{dx}(e"), sourcepos: Sourcepos { start: LineColumn { line: 219, column: 1 }, end: LineColumn { line: 219, column: 14 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Superscript, sourcepos: Sourcepos { start: LineColumn { line: 219, column: 15 }, end: LineColumn { line: 219, column: 22 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Text("x) = e"), sourcepos: Sourcepos { start: LineColumn { line: 219, column: 16 }, end: LineColumn { line: 219, column: 21 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: Text("x"), sourcepos: Sourcepos { start: LineColumn { line: 219, column: 23 }, end: LineColumn { line: 219, column: 23 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: SoftBreak, sourcepos: Sourcepos { start: LineColumn { line: 219, column: 24 }, end: LineColumn { line: 219, column: 24 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }, Node { data: RefCell { value: Ast { value: Text("$$"), sourcepos: Sourcepos { start: LineColumn { line: 220, column: 1 }, end: LineColumn { line: 220, column: 2 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }, Node { data: RefCell { value: Ast { value: FootnoteDefinition(NodeFootnoteDefinition { name: "1", total_references: 1 }), sourcepos: Sourcepos { start: LineColumn { line: 127, column: 1 }, end: LineColumn { line: 128, column: 0 } }, internal_offset: 6, content: "", open: false, last_line_blank: true, table_visited: false, line_offsets: [] } }, children: [Node { data: RefCell { value: Ast { value: Paragraph, sourcepos: Sourcepos { start: LineColumn { line: 127, column: 7 }, end: LineColumn { line: 127, column: 35 } }, internal_offset: 0, content: "This is the footnote content.\n", open: false, last_line_blank: true, table_visited: false, line_offsets: [6] } }, children: [Node { data: RefCell { value: Ast { value: Text("This is the footnote content."), sourcepos: Sourcepos { start: LineColumn { line: 127, column: 7 }, end: LineColumn { line: 127, column: 35 } }, internal_offset: 0, content: "", open: false, last_line_blank: false, table_visited: false, line_offsets: [] } }, children: [] }] }] }] } 
